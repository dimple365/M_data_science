# -*- coding: utf-8 -*-
"""day2 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AfJmsZANK1i5Jl46DWa3I_Q-_48JSNw6
"""

!pip install gTTS
from gTTS import gTTS
text='''paytm par 50rs prapt hue.'''
audio=gTTS(text)
audio.save('paytm.mp3')

import pygame as p
p.init()

music=p.mixer.sound('paytm.mp3')
music.play()

from gTTS import gTTS
text='''paytm par 50rs prapt hue.'''
audio=gTTS(text)
audio.save('paytm.mp3')

import pygame as p
p.init()

music=p.mixer.sound('paytm.mp3')
music.play()

#pip install pygame

def check_palindrome(word):
  return word
check_palindrome("ajay")

a="lucky"
a[::-1]

if a==a[::-1]:
  print(f'{a} is a palindrome')
else:
  print(f'{a} is not a palindrome')



def check_palindrome(word:str):
 if type(word)==str:
   word=word.upper()
   if word==word[::-1]:
     print('palindrome')
   else:
     print('not palidrome')
 else:
    return'invalid data type'
check_palindrome(1234)

def give_fibo(n):
  fibo=[0,1]
  for i in range(n-2):
    last_num=fibo[-1]
    second_num=fibo[-2]
    next_num=last_num+second_num
    fibo.append(next_num)
  return fibo
give_fibo(5)

def check_prime(number):
  for i in range(2,number):
     if number%i==0:
      return 'not a prime number'
      break
      print('happy holi')
  else:
    return 'prime number'
check_prime(23)

n=5
for i in range(1,n+1):
  print('  '*(n-i)+i*'* ')

def print_star(n=5,type='left',shape='*'):
  if type=='left':
    space=''
  if type=='right':
    space='  '
  if type=='center':
    space=' '
  for i in range(1,n+1):
    print(space*(n-i)+i*f'{shape} ')
print_star(8,'center','$')

def factorial(n):
  result=1
  for i in range(1,n+1):
    result*=i
  return result
factorial(9)

def total_sales(*args):#for specifying multiple arguments
  #unpacking
#   return sum(args)
# total_sales(99,76,2,4,5)
 result=0
 for i in args:
  result+=i
 return result

total_sales(4,3,5,9)

sales=[67,98,23,4,5,]
min_element=sales[0]
for i in sales[1:]:
  if i<min_element:
    min_element=i
print(min_element)

sales=[67,98,23,4,5,-9]
max_element=sales[0]
for i in sales[1:]:
  if i>max_element:[]
    max_element=i
print(max_element)

def num(*data):
  min_element=data[0]
  for i in data[1:]:
    if i<min_element:
     min_element=i
  return min_element


num(2,3,5,6,3,3)

def num(*data):
  max_element=data[0]
  for i in data[1:]:
    if i>max_element:
     max_element=i
  return max_element
num(2,3,5,6,3,3)

company=['ola','uber','rapido']
def add_hashtag(*company):
  result=[]
  for i in company:
    result.append('#'+i.upper())
  return result
add_hashtag(*company)

def store_records(name,age,sec,rollno,Class):
  data={'name':name,'age':age,'sec':sec,'rollno':rollno,'Class':Class}
  import pandas as p
  result=p.DataFrame(data,index=[1])
  return result
display(store_records('karan',18,'b',20,12))
display(store_records('kiran',19,'a',26,12))
display(store_records('naman',18,'b',28,12))

def student_record(**kwargs):
  import pandas as p
  result=p.DataFrame(kwargs,index=[1])
  return result
student_record(name='divya',age=19,sec='m1',rollno=8,address='delhi')

#exception handling
#try
#expect

age='23'
try:
  print(1/0)
  if age>=18:
    print('can vote')
  else:
    print('can\'t vote')
except TypeError:
    print('something went wrong')
    print('invalid datatype')
except:
  print('invalid code')

def student_record(**kwargs):#multiple keys and values
  import pandas as p
  try:
    data=p.DataFrame(kwargs)
    return data
  except:
    data=p.DataFrame(kwargs,index=[1])
    return data

student_record(name=['aman','kiran','riya','siya'],age=[20,26,22,23],sec=list('abcd'))#list separates the values

def show_time():
  try:
    while True:
      import time
      print(time.asctime())
      time.sleep(1)
      display(clear=True)
  except:
    print('interrupted by user')
show_time()

import dimple as d
print('done')

import dimple as d #ctrl+space
d.print_star(n=8,type='center',shape='$')

d.give_fibo(4)

d.show_time()

d.factorial(7)

d.check_prime(39)

from dimple import student_record
print('done')

student_record(name='kirti',age=20)

d.sum_of_n_natural_numbers(90)

import turtle
print('done')

# import turtle
# for i in range(4):
#   turtle.speed()
#   turtle.bgcolor('black')
#   col=['blue','orange','green','pink']
#   import random
#   picked_color=randon.choice(col)
#   turtle.color(picked_color)
#   turtle.circle(100)
#   turtle.left(90)

#context manager
file=open('dimple.py',mode='r')
print(file.read())
file.close()

f=open('dimple.py',mode='r')
print(f.readline())
file.close

f=open('dimple.py',mode='r')
for i in range(5):
  if i==4:
   print(f.readline())
  else:
    f.readline()